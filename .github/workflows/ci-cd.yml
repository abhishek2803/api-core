# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

# Trigger workflow on push to 'main' or 'develop' branches and pull request
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 for building the project
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Step 3: Cache Gradle dependencies for faster builds
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # Step 5: Run tests to verify the build
      - name: Run tests
        run: ./gradlew test --no-daemon

  deploy:
    # This job depends on the build job
    needs: build
    runs-on: ubuntu-latest

    # Only run deploy on pushes to the main branch
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 6: Checkout the code again for deployment
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 7: Log in to Docker Hub using PAT
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 8: Build the Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} .

      # Step 9: Tag the Docker image
      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

      # Step 10: Push the Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
